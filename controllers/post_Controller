const Post = require('../models/post');
const Comment = require('../models/comment');
const passport = require('passport');
module.exports.createpost = async function(req,res){
    if(req.isAuthenticated()){
        var item = new Post({
            content: req.body.content,
            user : req.user._id
        });
        
            try{
                await item.save();
            }catch(err){
                console.log('error in creating a post');
                return;
            }
            return res.redirect('back');
        }
        else{
            res.redirect('/loginpage');
        }
    }
    module.exports.destroy= async function(req,res){
       console.log('request recieved in destroy post');
        let dpost;
        try{
dpost= await Post.findById(req.params.id);
        }
        catch(err){
            console.log('error in finding post by this id');
            return res.redirect('back');
        }
        if(dpost){
            console.log('post found now proceeding to delete');
            console.log(dpost.user._id);
            console.log(req.user.id);
            console.log(dpost.user._id==req.user.id);
//let useridstring1=JSON.stringify(dpost._id);
//let useridstring2=JSON.stringify(req.user._id);
if(dpost.user._id==req.user.id){
    console.log('user is authorized to delete post');
try{
    await Post.findByIdAndDelete(dpost._id);
    console.log('trying to delete post');
}
       catch(err){
        console.log('error in deleting post');
        return res.redirect('back');
       }
       try{
        await Comment.deleteMany({post:dpost._id});
        console.log('trying to delete comments');
       }catch(err){
        console.log('error in deleting comments related to the post');
        return res.redirect('back');
       }
    
    }else{
        console.log('not authorized');
    }
       
        
       }
       else{
        console.log('no post found with this id');
       }
return res.redirect('back');


    }
